{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anoma\\\\OneDrive\\\\desktop\\\\GeekidsPlus\\\\frontend\\\\src\\\\Game.js\";\nimport React from \"react\";\nimport { shuffle } from \"./utils.js\";\nimport Gameboard from \"./components/game.components/Gameboard\";\nimport axios from \"axios\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { SelectGameType } from \"./components/game.components/SelectGameType\";\nimport { SelectGameLevel } from './components/game.components/SelectGameLevel';\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.roundComplete = () => {\n      this.currentWordsIndexCounter = this.currentWordsIndexCounter + 1;\n    };\n\n    this.init = () => {\n      this.lettersCorrectCounter = 0;\n      this.roundStart();\n      this.inSession = !this.inSession;\n    };\n\n    this.handleInit = () => {\n      this.init();\n    };\n\n    this.handleOnNextRound = () => {\n      this.roundStart();\n      this.setState(state => ({\n        displayNextRoundButton: !this.state.displayNextRoundButton\n      }));\n    };\n\n    this.handleOnFinalCheckCorrect = () => {\n      this.roundComplete();\n      this.setState(state => ({\n        displayNextRoundButton: !this.state.displayNextRoundButton\n      }));\n    };\n\n    this.handleOnHelperClick = () => {\n      this.setAlphabetData();\n    };\n\n    this.state = {\n      alphabet: 0,\n      dropzoneWord: \"\",\n      currentImg: \"\",\n      displayNextRoundButton: false,\n      displayDifficultWords: false\n    };\n    this.inSession = false;\n    this.currentWordsIndexCounter = 0;\n    this.handleInit = this.handleInit.bind(this);\n    this.handleOnNextRound = this.handleOnNextRound.bind(this);\n    this.handleOnFinalCheckCorrect = this.handleOnFinalCheckCorrect.bind(this);\n  }\n\n  async loadWords() {\n    try {\n      const response = await axios.get(\"http://localhost:3000/cards\");\n      console.log(response.data);\n      this.currentWords = response.data;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  setAlphabetData() {\n    this.setState({\n      alphabet: shuffle([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"])\n    });\n  }\n\n  setDropzoneData() {\n    this.setState({\n      dropzoneWord: [...this.currentWords[this.currentWordsIndexCounter].name]\n    });\n  }\n\n  setCurrentImgData() {\n    this.setState({\n      currentImg: this.currentWords[this.currentWordsIndexCounter].img\n    });\n  } //-- Game Controller Logic --\\\\\n\n\n  async roundStart() {\n    await this.loadWords();\n    this.setDropzoneData();\n    this.setAlphabetData();\n    this.setCurrentImgData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui center aligned grey container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Gameboard, {\n      inSession: this.inSession,\n      dropzoneWord: this.state.dropzoneWord,\n      displayNextRoundButton: this.state.displayNextRoundButton,\n      difficultLetters: this.difficultLetters,\n      handleInit: this.handleInit,\n      handleOnFinalCheckCorrect: this.handleOnFinalCheckCorrect,\n      handleOnNextRound: this.handleOnNextRound,\n      alphabet: this.state.alphabet,\n      handleOnHelperClick: this.handleOnHelperClick,\n      currentImg: this.state.currentImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/anoma/OneDrive/desktop/GeekidsPlus/frontend/src/Game.js"],"names":["React","shuffle","Gameboard","axios","Route","Switch","SelectGameType","SelectGameLevel","Game","Component","constructor","props","roundComplete","currentWordsIndexCounter","init","lettersCorrectCounter","roundStart","inSession","handleInit","handleOnNextRound","setState","state","displayNextRoundButton","handleOnFinalCheckCorrect","handleOnHelperClick","setAlphabetData","alphabet","dropzoneWord","currentImg","displayDifficultWords","bind","loadWords","response","get","console","log","data","currentWords","err","setDropzoneData","name","setCurrentImgData","img","render","difficultLetters"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { shuffle } from \"./utils.js\";\r\nimport Gameboard from \"./components/game.components/Gameboard\";\r\nimport axios from \"axios\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { SelectGameType } from \"./components/game.components/SelectGameType\";\r\nimport { SelectGameLevel } from './components/game.components/SelectGameLevel'\r\nexport default class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      alphabet: 0,\r\n      dropzoneWord: \"\",\r\n      currentImg: \"\",\r\n      displayNextRoundButton: false,\r\n      displayDifficultWords: false,\r\n    };\r\n    this.inSession = false;\r\n    this.currentWordsIndexCounter = 0;\r\n    this.handleInit = this.handleInit.bind(this);\r\n    this.handleOnNextRound = this.handleOnNextRound.bind(this);\r\n    this.handleOnFinalCheckCorrect = this.handleOnFinalCheckCorrect.bind(this);\r\n  }\r\n\r\n  async loadWords () {\r\n    try {\r\n        const response = await axios.get(\"http://localhost:3000/cards\")\r\n        console.log(response.data)\r\n        this.currentWords = response.data\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n  }\r\n\r\n  setAlphabetData() {\r\n    this.setState({\r\n      alphabet: shuffle([\r\n        \"a\",\r\n        \"b\",\r\n        \"c\",\r\n        \"d\",\r\n        \"e\",\r\n        \"f\",\r\n        \"g\",\r\n        \"h\",\r\n        \"i\",\r\n        \"j\",\r\n        \"k\",\r\n        \"l\",\r\n        \"m\",\r\n        \"n\",\r\n        \"o\",\r\n        \"p\",\r\n        \"q\",\r\n        \"r\",\r\n        \"s\",\r\n        \"t\",\r\n        \"u\",\r\n        \"v\",\r\n        \"w\",\r\n        \"x\",\r\n        \"y\",\r\n        \"z\",\r\n      ]),\r\n    });\r\n  }\r\n\r\n  setDropzoneData() {\r\n    this.setState({\r\n      dropzoneWord: [...this.currentWords[this.currentWordsIndexCounter].name],\r\n    });\r\n  }\r\n\r\n  setCurrentImgData() {\r\n    this.setState({\r\n      currentImg: this.currentWords[this.currentWordsIndexCounter].img,\r\n    });\r\n  }\r\n\r\n  //-- Game Controller Logic --\\\\\r\n\r\n  async roundStart () {\r\n    await this.loadWords();\r\n    this.setDropzoneData();\r\n    this.setAlphabetData();\r\n    this.setCurrentImgData();\r\n  };\r\n\r\n  roundComplete = () => {\r\n    this.currentWordsIndexCounter = this.currentWordsIndexCounter + 1;\r\n  };\r\n\r\n  init = () => {\r\n    this.lettersCorrectCounter = 0;\r\n    this.roundStart();\r\n    this.inSession = !this.inSession;\r\n  };\r\n\r\n  //-- React Handlers --\\\\\r\n  handleInit = () => {\r\n    this.init();\r\n  };\r\n\r\n  handleOnNextRound = () => {\r\n    this.roundStart();\r\n    this.setState((state) => ({\r\n      displayNextRoundButton: !this.state.displayNextRoundButton,\r\n    }));\r\n  };\r\n\r\n  handleOnFinalCheckCorrect = () => {\r\n    this.roundComplete();\r\n    this.setState((state) => ({\r\n      displayNextRoundButton: !this.state.displayNextRoundButton,\r\n    }));\r\n  };\r\n\r\n  handleOnHelperClick = () => {\r\n    this.setAlphabetData();\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n     \r\n      <div className=\"ui center aligned grey container\">\r\n       \r\n              <Gameboard\r\n                inSession={this.inSession}\r\n                dropzoneWord={this.state.dropzoneWord}\r\n                displayNextRoundButton={this.state.displayNextRoundButton}\r\n                difficultLetters={this.difficultLetters}\r\n                handleInit={this.handleInit}\r\n                handleOnFinalCheckCorrect={this.handleOnFinalCheckCorrect}\r\n                handleOnNextRound={this.handleOnNextRound}\r\n                alphabet={this.state.alphabet}\r\n                handleOnHelperClick={this.handleOnHelperClick}\r\n                currentImg={this.state.currentImg}\r\n              />\r\n        </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}