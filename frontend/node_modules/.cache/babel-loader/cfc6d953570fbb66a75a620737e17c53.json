{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anoma\\\\OneDrive\\\\desktop\\\\GeekidsPlus\\\\frontend\\\\src\\\\components\\\\game.components\\\\Gameboard.js\";\nimport React from 'react';\nimport Timer from './Timer';\nimport { Points } from './Points';\nimport { Dropzone } from './Dropzone';\nimport { Interact } from './Interact';\nimport { Alphabet } from './Alphabet';\nimport { RoundBreakdown } from './RoundBreakdown';\nimport { Thumbnail } from './Thumbnail';\nimport { Button } from './Button';\nexport default class Gameboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.pointCalc = dropzoneWord => {\n      this.bonus = 6;\n      this.round = Math.floor(dropzoneWord.length * 5 + this.bonus);\n      this.totalPoints = this.totalPoints + this.round;\n      console.log(\"you have \" + this.totalPoints);\n    };\n\n    this.totalPoints = 0;\n    this.lettersCorrectCounter = 0;\n    this.checkCorrect = this.checkCorrect.bind(this);\n  }\n\n  updateDifficultLetters(index) {\n    let regex = this.props.dropzoneWord[index];\n    let deleteIndex = new RegExp(regex, \"g\");\n    this.props.difficultLetters.splice(deleteIndex);\n    console.log(\"current difficult letters \" + this.props.difficultLetters);\n  }\n\n  checkCorrect(event) {\n    for (let i = 0; i < this.props.dropzoneWord.length; i++) {\n      if (this.props.dropzoneWord[i] === event.relatedTarget.textContent && event.relatedTarget.textContent === event.target.textContent && !event.target.classList.contains(\"checkedCorrect\")) {\n        event.target.classList.add(\"checkedCorrect\");\n        this.updateDifficultLetters(i);\n        event.relatedTarget.classList.remove('draggable');\n        this.lettersCorrectCounter = this.lettersCorrectCounter + 1;\n        console.log(this.lettersCorrectCounter);\n      }\n    }\n\n    if (this.props.dropzoneWord.length === this.lettersCorrectCounter) {\n      this.pointCalc(this.props.dropzoneWord);\n      this.lettersCorrectCounter = 0;\n      this.props.handleOnFinalCheckCorrect();\n    }\n  }\n\n  render() {\n    if (this.props.displayNextRoundButton) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(RoundBreakdown, {\n        handleOnNextRound: this.props.handleOnNextRound,\n        roundPoints: this.round,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: \"orange\",\n        border: \"solid black 1px\",\n        borderRadius: 15\n      },\n      className: \"ui horizontal segments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        borderLeft: \"solid black 0px\",\n        borderRadius: 15,\n        background: \"orange\"\n      },\n      className: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, this.props.inSession && /*#__PURE__*/React.createElement(Timer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 46\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: \"#333333\"\n      },\n      className: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button\",\n      onClick: this.props.handleInit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"Start Game\"), /*#__PURE__*/React.createElement(Thumbnail, {\n      source: this.props.currentImg,\n      standardWidth: \"150px\",\n      standardHeight: \"100px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: \"orange\",\n        borderLeft: \"solid black 0px\",\n        borderRadius: 15\n      },\n      className: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, this.props.inSession && /*#__PURE__*/React.createElement(Button, {\n      label: \"Helper\",\n      handler: this.props.handleOnHelperClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 46\n      }\n    }))), this.props.inSession && /*#__PURE__*/React.createElement(Interact, {\n      checkCorrect: this.checkCorrect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      dropzoneWord: this.props.dropzoneWord,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Alphabet, {\n      difficultLetters: this.props.difficultLetters,\n      alphabet: this.props.alphabet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/anoma/OneDrive/desktop/GeekidsPlus/frontend/src/components/game.components/Gameboard.js"],"names":["React","Timer","Points","Dropzone","Interact","Alphabet","RoundBreakdown","Thumbnail","Button","Gameboard","Component","constructor","props","pointCalc","dropzoneWord","bonus","round","Math","floor","length","totalPoints","console","log","lettersCorrectCounter","checkCorrect","bind","updateDifficultLetters","index","regex","deleteIndex","RegExp","difficultLetters","splice","event","i","relatedTarget","textContent","target","classList","contains","add","remove","handleOnFinalCheckCorrect","render","displayNextRoundButton","handleOnNextRound","background","border","borderRadius","borderLeft","inSession","handleInit","currentImg","handleOnHelperClick","alphabet"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Timer from './Timer'\r\nimport { Points}  from './Points'\r\nimport { Dropzone } from './Dropzone'\r\nimport { Interact } from './Interact'\r\nimport { Alphabet } from './Alphabet'\r\nimport { RoundBreakdown } from './RoundBreakdown'\r\nimport { Thumbnail } from './Thumbnail'\r\nimport { Button } from './Button';\r\n\r\n\r\n\r\n\r\nexport default class Gameboard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.totalPoints = 0;\r\n        this.lettersCorrectCounter = 0;\r\n        this.checkCorrect = this.checkCorrect.bind(this)\r\n    }\r\n\r\n    updateDifficultLetters (index) {\r\n        let regex = this.props.dropzoneWord[index]\r\n        let deleteIndex = new RegExp(regex, \"g\")\r\n        this.props.difficultLetters.splice(deleteIndex)\r\n        console.log(\"current difficult letters \" + this.props.difficultLetters)\r\n\r\n      \r\n     }\r\n \r\n     checkCorrect (event) {\r\n         for(let i = 0; i < this.props.dropzoneWord.length; i++){\r\n             if (this.props.dropzoneWord[i] === event.relatedTarget.textContent && \r\n                event.relatedTarget.textContent === event.target.textContent &&\r\n                !event.target.classList.contains(\"checkedCorrect\")\r\n               ){\r\n                       \r\n                     event.target.classList.add(\"checkedCorrect\");\r\n                     this.updateDifficultLetters(i)\r\n                     event.relatedTarget.classList.remove('draggable');\r\n                     this.lettersCorrectCounter = this.lettersCorrectCounter + 1\r\n                     console.log(this.lettersCorrectCounter)\r\n             }\r\n         }\r\n         if( this.props.dropzoneWord.length === this.lettersCorrectCounter ){\r\n             this.pointCalc(this.props.dropzoneWord)\r\n             this.lettersCorrectCounter = 0;\r\n             this.props.handleOnFinalCheckCorrect()\r\n         }\r\n     }\r\n \r\n     pointCalc = (dropzoneWord) => {  \r\n         this.bonus = 6;\r\n         this.round = Math.floor(dropzoneWord.length * 5 + this.bonus)\r\n         this.totalPoints = this.totalPoints + this.round\r\n         console.log(\"you have \" + this.totalPoints)\r\n     }\r\n\r\n    render(){\r\n        if(this.props.displayNextRoundButton){\r\n            return (\r\n                <div>\r\n                    <RoundBreakdown handleOnNextRound={this.props.handleOnNextRound} roundPoints={this.round}/>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <div style={{background: \"orange\", border: \"solid black 1px\", borderRadius: 15}} className=\"ui horizontal segments\">\r\n                <div style={{borderLeft: \"solid black 0px\", borderRadius: 15, background: \"orange\"}} className=\"ui segment\">\r\n                    {this.props.inSession && <Timer />}\r\n                </div>\r\n                <div style={{background: \"#333333\"}} className=\"ui segment\">\r\n                    <button className=\"ui button\" onClick={this.props.handleInit}>Start Game</button>\r\n                    <Thumbnail source={this.props.currentImg} standardWidth=\"150px\" standardHeight=\"100px\" />\r\n                \r\n                </div>\r\n                <div style={{background: \"orange\", borderLeft: \"solid black 0px\", borderRadius: 15}}className=\"ui segment\">\r\n                    {this.props.inSession && <Button label='Helper' handler={this.props.handleOnHelperClick} />}\r\n                </div>\r\n            </div>\r\n\r\n{this.props.inSession && \r\n    <Interact checkCorrect={ this.checkCorrect }>\r\n        <Dropzone dropzoneWord={this.props.dropzoneWord} />\r\n        <Alphabet difficultLetters={this.props.difficultLetters} alphabet={this.props.alphabet} />\r\n    </Interact>}\r\n    </div>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}