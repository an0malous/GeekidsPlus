{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anoma\\\\OneDrive\\\\desktop\\\\GeekidsPlus\\\\frontend\\\\src\\\\components\\\\Interact.js\";\nimport React from 'react';\nimport interact from 'interactjs';\nexport const Interact = props => {\n  interact('.draggable').draggable({\n    // enable inertial throwing\n    inertia: true,\n    // keep the element within the area of it's parent\n    modifiers: [interact.modifiers.restrictRect({\n      restriction: 'none',\n      endOnly: true\n    })],\n    // enable autoScroll\n    autoScroll: false,\n    listeners: {\n      // call this function on every dragmove event\n      move: dragMoveListener,\n\n      // call this function on every dragend event\n      end(event) {\n        var textEl = event.target.querySelector('p');\n        textEl && (textEl.textContent = 'moved a distance of ' + Math.sqrt(Math.pow(event.pageX - event.x0, 2) + Math.pow(event.pageY - event.y0, 2) | 0).toFixed(2) + 'px');\n      }\n\n    }\n  });\n\n  function dragMoveListener(event) {\n    var target = event.target; // keep the dragged position in the data-x/data-y attributes\n\n    var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n    var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy; // translate the element\n\n    target.style.webkitTransform = target.style.transform = 'translate(' + x + 'px, ' + y + 'px)'; // update the posiion attributes\n\n    target.setAttribute('data-x', x);\n    target.setAttribute('data-y', y);\n  } // enable draggables to be dropped into this\n\n\n  interact('.inner-dropzone').dropzone({\n    // only accept elements matching this CSS selector\n    accept: '.draggable',\n    // Require a 75% element overlap for a drop to be possible\n    overlap: 0.75,\n    // listen for drop related events:\n    ondropactivate: function (event) {\n      // add active dropzone feedback\n      event.target.classList.add('drop-active');\n    },\n    ondragenter: function (event) {\n      var draggableElement = event.relatedTarget;\n      var dropzoneElement = event.target; // feedback the possibility of a drop\n\n      dropzoneElement.classList.add('drop-target');\n      draggableElement.classList.add('can-drop'); //draggableElement.textContent = 'Dragged in'\n    },\n    ondragleave: function (event) {\n      // remove the drop feedback style\n      event.target.classList.remove('correct');\n      event.target.classList.remove('incorrect');\n      event.target.classList.remove('drop-target');\n      event.relatedTarget.classList.remove('can-drop');\n      event.target.classList.remove('test'); //event.relatedTarget.textContent = 'Dragged out'\n    },\n    ondrop: function (event) {\n      console.log(\"dropped\");\n      console.log(event);\n      {\n        props.checkCorrect(event);\n      }\n    },\n    ondropdeactivate: function (event) {\n      // remove active dropzone feedback\n      event.target.classList.remove('drop-active');\n      event.target.classList.remove('drop-target');\n      event.target.classList.remove('drop-target');\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["C:/Users/anoma/OneDrive/desktop/GeekidsPlus/frontend/src/components/Interact.js"],"names":["React","interact","Interact","props","draggable","inertia","modifiers","restrictRect","restriction","endOnly","autoScroll","listeners","move","dragMoveListener","end","event","textEl","target","querySelector","textContent","Math","sqrt","pow","pageX","x0","pageY","y0","toFixed","x","parseFloat","getAttribute","dx","y","dy","style","webkitTransform","transform","setAttribute","dropzone","accept","overlap","ondropactivate","classList","add","ondragenter","draggableElement","relatedTarget","dropzoneElement","ondragleave","remove","ondrop","console","log","checkCorrect","ondropdeactivate","children"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport interact from 'interactjs';\r\n\r\nexport const Interact = (props) => {\r\n    interact('.draggable')\r\n      .draggable({\r\n        // enable inertial throwing\r\n        inertia: true,\r\n        // keep the element within the area of it's parent\r\n        modifiers: [\r\n          interact.modifiers.restrictRect({\r\n            restriction: 'none',\r\n            endOnly: true\r\n          })\r\n        ],\r\n        // enable autoScroll\r\n        autoScroll: false,\r\n    \r\n        listeners: {\r\n          // call this function on every dragmove event\r\n          move: dragMoveListener,\r\n    \r\n          // call this function on every dragend event\r\n          end (event) {\r\n            var textEl = event.target.querySelector('p')\r\n    \r\n            textEl && (textEl.textContent =\r\n              'moved a distance of ' +\r\n              (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +\r\n                         Math.pow(event.pageY - event.y0, 2) | 0))\r\n                .toFixed(2) + 'px')\r\n          }\r\n        }\r\n      })\r\n    \r\n    function dragMoveListener (event) {\r\n      var target = event.target\r\n      // keep the dragged position in the data-x/data-y attributes\r\n      var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx\r\n      var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy\r\n    \r\n      // translate the element\r\n      target.style.webkitTransform =\r\n        target.style.transform =\r\n          'translate(' + x + 'px, ' + y + 'px)'\r\n    \r\n      // update the posiion attributes\r\n      target.setAttribute('data-x', x)\r\n      target.setAttribute('data-y', y)\r\n    }\r\n    \r\n    // enable draggables to be dropped into this\r\n    interact('.inner-dropzone').dropzone({\r\n      // only accept elements matching this CSS selector\r\n      accept: '.draggable',\r\n      // Require a 75% element overlap for a drop to be possible\r\n      overlap: 0.75,\r\n    \r\n      // listen for drop related events:\r\n    \r\n      ondropactivate: function (event) {\r\n        // add active dropzone feedback\r\n        event.target.classList.add('drop-active')\r\n      },\r\n      ondragenter: function (event) {\r\n        var draggableElement = event.relatedTarget\r\n        var dropzoneElement = event.target\r\n    \r\n        // feedback the possibility of a drop\r\n        dropzoneElement.classList.add('drop-target')\r\n        draggableElement.classList.add('can-drop')\r\n        //draggableElement.textContent = 'Dragged in'\r\n      },\r\n      ondragleave: function (event) {\r\n        // remove the drop feedback style\r\n      \r\n        event.target.classList.remove('correct')\r\n        event.target.classList.remove('incorrect')\r\n        event.target.classList.remove('drop-target')\r\n        event.relatedTarget.classList.remove('can-drop')\r\n        event.target.classList.remove('test');\r\n        //event.relatedTarget.textContent = 'Dragged out'\r\n      },\r\n      ondrop: function (event) {\r\n        console.log(\"dropped\")\r\n        console.log( event)\r\n        {props.checkCorrect(event)}\r\n      \r\n    },\r\n      ondropdeactivate: function (event) {\r\n        // remove active dropzone feedback\r\n        event.target.classList.remove('drop-active')\r\n        event.target.classList.remove('drop-target')\r\n        event.target.classList.remove('drop-target')\r\n      },\r\n    })\r\n\r\n    return (\r\n        <div>\r\n             {props.children}\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}