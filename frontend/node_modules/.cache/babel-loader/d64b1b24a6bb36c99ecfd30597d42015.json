{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anoma\\\\OneDrive\\\\desktop\\\\GeekidsPlus\\\\frontend\\\\src\\\\Game.js\";\nimport React from \"react\";\nimport { shuffle } from \"./utils.js\";\nimport Gameboard from \"./components/game.components/Gameboard\";\nimport axios from \"axios\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { SelectGameType } from \"./components/game.components/SelectGameType\";\nimport SelectGameLevel from './SelectGameLevel';\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.roundStart = () => {\n      this.setDropzoneData();\n      this.setAlphabetData();\n      this.setCurrentImgData();\n    };\n\n    this.roundComplete = () => {\n      this.currentWordsIndexCounter = this.currentWordsIndexCounter + 1;\n    };\n\n    this.init = () => {\n      this.lettersCorrectCounter = 0;\n      this.roundStart();\n      this.inSession = !this.inSession;\n    };\n\n    this.handleInit = () => {\n      this.init();\n    };\n\n    this.handleOnNextRound = () => {\n      this.roundStart();\n      this.setState(state => ({\n        displayNextRoundButton: !this.state.displayNextRoundButton\n      }));\n    };\n\n    this.handleOnFinalCheckCorrect = () => {\n      this.roundComplete();\n      this.setState(state => ({\n        displayNextRoundButton: !this.state.displayNextRoundButton\n      }));\n    };\n\n    this.handleOnHelperClick = () => {\n      this.setAlphabetData();\n    };\n\n    this.state = {\n      alphabet: 0,\n      dropzoneWord: \"\",\n      currentImg: \"\",\n      displayNextRoundButton: false,\n      displayDifficultWords: false\n    };\n    this.inSession = false;\n    this.currentWordsIndexCounter = 0;\n    this.handleInit = this.handleInit.bind(this);\n    this.handleOnNextRound = this.handleOnNextRound.bind(this);\n    this.handleOnFinalCheckCorrect = this.handleOnFinalCheckCorrect.bind(this);\n  }\n\n  loadWords() {\n    axios.get(\"http://localhost:3000/cards\").then(response => this.currentWords = response.data).then(() => {\n      this.currentWord = this.currentWords[this.currentWordsIndexCounter].name;\n      this.difficultLetters = [...this.currentWords[this.currentWordsIndexCounter].name];\n    });\n  }\n\n  setAlphabetData() {\n    this.setState({\n      alphabet: shuffle([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"])\n    });\n  }\n\n  setDropzoneData() {\n    this.setState({\n      dropzoneWord: [...this.currentWords[this.currentWordsIndexCounter].name]\n    });\n  }\n\n  setCurrentImgData() {\n    this.setState({\n      currentImg: this.currentWords[this.currentWordsIndexCounter].img\n    });\n  } //-- Game Controller Logic --\\\\\n\n\n  render() {\n    {\n      this.loadWords();\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui center aligned grey container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/phonics/newgame\",\n      render: () => /*#__PURE__*/React.createElement(Gameboard, {\n        inSession: this.inSession,\n        dropzoneWord: this.state.dropzoneWord,\n        displayNextRoundButton: this.state.displayNextRoundButton,\n        difficultLetters: this.difficultLetters,\n        handleInit: this.handleInit,\n        handleOnFinalCheckCorrect: this.handleOnFinalCheckCorrect,\n        handleOnNextRound: this.handleOnNextRound,\n        alphabet: this.state.alphabet,\n        handleOnHelperClick: this.handleOnHelperClick,\n        currentImg: this.state.currentImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/phonics/newgame#level\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SelectGameLevel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/phonics/\",\n      render: () => /*#__PURE__*/React.createElement(SelectGameType, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 55\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/anoma/OneDrive/desktop/GeekidsPlus/frontend/src/Game.js"],"names":["React","shuffle","Gameboard","axios","Route","Switch","SelectGameType","SelectGameLevel","Game","Component","constructor","props","roundStart","setDropzoneData","setAlphabetData","setCurrentImgData","roundComplete","currentWordsIndexCounter","init","lettersCorrectCounter","inSession","handleInit","handleOnNextRound","setState","state","displayNextRoundButton","handleOnFinalCheckCorrect","handleOnHelperClick","alphabet","dropzoneWord","currentImg","displayDifficultWords","bind","loadWords","get","then","response","currentWords","data","currentWord","name","difficultLetters","img","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { shuffle } from \"./utils.js\";\r\nimport Gameboard from \"./components/game.components/Gameboard\";\r\nimport axios from \"axios\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { SelectGameType } from \"./components/game.components/SelectGameType\";\r\nimport SelectGameLevel from './SelectGameLevel'\r\nexport default class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      alphabet: 0,\r\n      dropzoneWord: \"\",\r\n      currentImg: \"\",\r\n      displayNextRoundButton: false,\r\n      displayDifficultWords: false,\r\n    };\r\n    this.inSession = false;\r\n    this.currentWordsIndexCounter = 0;\r\n    this.handleInit = this.handleInit.bind(this);\r\n    this.handleOnNextRound = this.handleOnNextRound.bind(this);\r\n    this.handleOnFinalCheckCorrect = this.handleOnFinalCheckCorrect.bind(this);\r\n  }\r\n\r\n  loadWords() {\r\n    axios\r\n      .get(\"http://localhost:3000/cards\")\r\n      .then((response) => (this.currentWords = response.data))\r\n      .then(() => {\r\n        this.currentWord = this.currentWords[\r\n          this.currentWordsIndexCounter\r\n        ].name;\r\n        this.difficultLetters = [\r\n          ...this.currentWords[this.currentWordsIndexCounter].name,\r\n        ];\r\n      });\r\n  }\r\n\r\n  setAlphabetData() {\r\n    this.setState({\r\n      alphabet: shuffle([\r\n        \"a\",\r\n        \"b\",\r\n        \"c\",\r\n        \"d\",\r\n        \"e\",\r\n        \"f\",\r\n        \"g\",\r\n        \"h\",\r\n        \"i\",\r\n        \"j\",\r\n        \"k\",\r\n        \"l\",\r\n        \"m\",\r\n        \"n\",\r\n        \"o\",\r\n        \"p\",\r\n        \"q\",\r\n        \"r\",\r\n        \"s\",\r\n        \"t\",\r\n        \"u\",\r\n        \"v\",\r\n        \"w\",\r\n        \"x\",\r\n        \"y\",\r\n        \"z\",\r\n      ]),\r\n    });\r\n  }\r\n\r\n  setDropzoneData() {\r\n    this.setState({\r\n      dropzoneWord: [...this.currentWords[this.currentWordsIndexCounter].name],\r\n    });\r\n  }\r\n\r\n  setCurrentImgData() {\r\n    this.setState({\r\n      currentImg: this.currentWords[this.currentWordsIndexCounter].img,\r\n    });\r\n  }\r\n\r\n  //-- Game Controller Logic --\\\\\r\n\r\n  roundStart = () => {\r\n    this.setDropzoneData();\r\n    this.setAlphabetData();\r\n    this.setCurrentImgData();\r\n  };\r\n\r\n  roundComplete = () => {\r\n    this.currentWordsIndexCounter = this.currentWordsIndexCounter + 1;\r\n  };\r\n\r\n  init = () => {\r\n    this.lettersCorrectCounter = 0;\r\n    this.roundStart();\r\n    this.inSession = !this.inSession;\r\n  };\r\n\r\n  //-- React Handlers --\\\\\r\n  handleInit = () => {\r\n    this.init();\r\n  };\r\n\r\n  handleOnNextRound = () => {\r\n    this.roundStart();\r\n    this.setState((state) => ({\r\n      displayNextRoundButton: !this.state.displayNextRoundButton,\r\n    }));\r\n  };\r\n\r\n  handleOnFinalCheckCorrect = () => {\r\n    this.roundComplete();\r\n    this.setState((state) => ({\r\n      displayNextRoundButton: !this.state.displayNextRoundButton,\r\n    }));\r\n  };\r\n\r\n  handleOnHelperClick = () => {\r\n    this.setAlphabetData();\r\n  };\r\n\r\n  render() {\r\n    {\r\n      this.loadWords();\r\n    }\r\n    return (\r\n      <div className=\"ui center aligned grey container\">\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/phonics/newgame\"\r\n            render={() => (\r\n              <Gameboard\r\n                inSession={this.inSession}\r\n                dropzoneWord={this.state.dropzoneWord}\r\n                displayNextRoundButton={this.state.displayNextRoundButton}\r\n                difficultLetters={this.difficultLetters}\r\n                handleInit={this.handleInit}\r\n                handleOnFinalCheckCorrect={this.handleOnFinalCheckCorrect}\r\n                handleOnNextRound={this.handleOnNextRound}\r\n                alphabet={this.state.alphabet}\r\n                handleOnHelperClick={this.handleOnHelperClick}\r\n                currentImg={this.state.currentImg}\r\n              />\r\n            )}\r\n          />\r\n            <Route exact path=\"/phonics/newgame#level\">\r\n                <SelectGameLevel />\r\n            </Route>\r\n          <Route exact path=\"/phonics/\" render={() => <SelectGameType />} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}